/*
 * Name: SewisePlayer framework V1.0.2
 * Author: Jack Zhang
 * Website: http://www.sewise.com/
 * Date: May 15, 2014
 * Copyright: 2013-2014, Sewise
 * Mail: jackzhang1204@gmail.com
 *
 */
(function(d) {
    d.SewisePlayer = d.SewisePlayer || {
        version: "1.0.2",
        script: "",
        localPath: "",
        video: "",
        audio: ""
    };
    d.SewisePlayerSkin = d.SewisePlayerSkin || {}
})(window);
(function(d) {
    d.SewisePlayer.IVodPlayer = d.SewisePlayer.IVodPlayer || {
        play: function() {},
        pause: function() {},
        stop: function() {},
        seek: function() {},
        changeClarity: function() {},
        setVolume: function() {},
        toPlay: function() {},
        duration: function() {},
        playTime: function() {},
        type: function() {},
        showTextTip: function() {},
        hideTextTip: function() {},
        muted: function() {}
    }
})(window);
(function(d) {
    d.SewisePlayerSkin.IVodSkin = d.SewisePlayerSkin.IVodSkin || {
        player: function() {},
        started: function() {},
        paused: function() {},
        stopped: function() {},
        seeking: function() {},
        buffering: function() {},
        bufferProgress: function() {},
        loadedProgress: function() {},
        programTitle: function() {},
        duration: function() {},
        playTime: function() {},
        startTime: function() {},
        loadSpeed: function() {},
        initialClarity: function() {},
        lang: function() {},
        logo: function() {},
        clarityButton: function() {},
        timeDisplay: function() {},
        controlBarDisplay: function() {},
        topBarDisplay: function() {},
        timeUpdate: function() {}
    }
})(window);
(function(d) {
    d.SewisePlayer.ILivePlayer = d.SewisePlayer.ILivePlayer || {
        live: function() {},
        play: function() {},
        pause: function() {},
        stop: function() {},
        seek: function() {},
        changeClarity: function() {},
        setVolume: function() {},
        toPlay: function() {},
        duration: function() {},
        liveTime: function() {},
        playTime: function() {},
        type: function() {},
        showTextTip: function() {},
        hideTextTip: function() {},
        muted: function() {}
    }
})(window);
(function(d) {
    d.SewisePlayerSkin.ILiveSkin = d.SewisePlayerSkin.ILiveSkin || {
        player: function() {},
        started: function() {},
        paused: function() {},
        stopped: function() {},
        seeking: function() {},
        buffering: function() {},
        bufferProgress: function() {},
        loadedProgress: function() {},
        programTitle: function() {},
        duration: function() {},
        playTime: function() {},
        startTime: function() {},
        loadSpeed: function() {},
        initialClarity: function() {},
        lang: function() {},
        logo: function() {},
        clarityButton: function() {},
        timeDisplay: function() {},
        controlBarDisplay: function() {},
        topBarDisplay: function() {},
        timeUpdate: function() {}
    }
})(window);
(function() {
    SewisePlayer.GlobalConst = {
        FLASH: "flash",
        HTML5: "html5",
        VOD: "vod",
        LIVE: "live",
        AUDIO: "audio",
        VIDEO: "video",
        FLV: "flv",
        MP4: "mp4",
        RTMP: "rtmp",
        HTTP: "http",
        M3U8: "m3u8",
        MP3: "mp3"
    }
})();
(function() {
    SewisePlayer.CommandDispatcher = function() {
        function d() {
            this.handlers = {}
        }
        d.prototype = {
            constructor: d,
            addEventListener: function(a, e) {
                if (void 0 != a) "undefined" == typeof this.handlers[a] && (this.handlers[a] = []), this.handlers[a].push(e);
                else throw Error("undefined property events.");
            },
            dispatchEvent: function(a) {
                if (!a.target) a.target = this;
                if (this.handlers[a.type] instanceof Array)
                    for (var e = this.handlers[a.type], d = 0, f = e.length; d < f; d++) e[d](a)
            },
            removeEventListener: function(a, d) {
                if (this.handlers[a] instanceof Array) {
                    for (var g = this.handlers[a], f = 0, b = g.length; f < b && !(g[f] === d); f++);
                    g.splice(f, 1)
                }
            }
        };
        return new d
    }()
})();
(function() {
    SewisePlayer.Events = {
        PARAMS_READY: "params_ready",
        PLAYER_SKIN_LOADED: "player_skin_loaded",
        PLAYER_SKIN_LOADED_ERROR: "player_skin_loaded_error",
        STREAMS_DATA_READY: "streams_data_ready",
        STREAMS_DATA_FAILED: "streams_data_failed",
        PLAY_VIDEO: "play_video",
        PLAY_NEXT: "play_next",
        PLAY_START: "play_start",
        PLAY_PAUSE: "play_pause",
        DURATION_CHANGE: "duration_change",
        TIME_UPDATE: "time_update",
        LOAD_PROGRESS: "load_progress"
    }
})();
(function() {
    SewisePlayer.Utils = {
        jsonp: function(d) {
            var a = d.url,
                e = d.jsonp,
                g = d.jsonpCallback,
                f = d.data,
                d = d.success,
                b = "",
                h;
            for (h in f) b += "&" + h + "=" + f[h];
            b = "?" + b.slice(1);
            null == e && (e = "callback");
            null == g && (g = "callbackFun" + (new Date).getTime());
            var a = a + b + ("&" + e + "=" + g),
                i = document.createElement("script");
            i.setAttribute("type", "text/javascript");
            i.src = a;
            document.body.appendChild(i);
            window[g] = d;
            i.onload = i.onreadystatechange = function() {
                (!this.readyState || "loaded" == this.readyState || "complete" == this.readyState) && document.body.removeChild(i)
            }
        },
        getScript: function(d) {
            var a = d.url,
                e = d.data,
                g = d.success,
                d = "",
                f;
            for (f in e) d += "&" + f + "=" + e[f];
            var d = "?" + d.slice(1),
                a = a + d,
                b = document.createElement("script");
            b.setAttribute("type", "text/javascript");
            b.src = a;
            document.body.appendChild(b);
            b.onload = b.onreadystatechange = function() {
                g();
                (!this.readyState || "loaded" == this.readyState || "complete" == this.readyState) && document.body.removeChild(b)
            }
        },
        getParameters: function(d) {
            var a = document.getElementsByTagName("script"),
                e;
            try {
                for (var g = a.length, f = 0; f < g; f++) {
                    var b = a[f].src.split("?"),
                        h = b[0],
                        i = h.split("/"),
                        h = 1 == i.length ? i[0] : i[i.length - 1];
                    if (h == d[0] || h == d[1]) {
                        e = 1 < b.length ? b[1].split("&") : [];
                        SewisePlayer.script = a[f];
                        if (h == d[1]) {
                            var m = b[0].lastIndexOf("/");
                            if (0 < m) SewisePlayer.localPath = b[0].slice(0, m + 1)
                        }
                        break
                    }
                }
                for (var d = {}, j, c, n, a = 0, o = e.length; a < o; a++) j = e[a].split("="), c = j[0], n = j[1], "undefined" == typeof d[c] ? d[c] = n : ("string" == typeof d[c] && (d[c] = [d[c]]), d[c].push(n));
                return d
            } catch (F) {
                return []
            }
        },
        object: {
            isEmpty: function(d) {
                for (var a in d) return !1;
                return !0
            }
        },
        browser: {
            versions: function() {
                var d = navigator.userAgent;
                return {
                    trident: -1 < d.indexOf("Trident"),
                    presto: -1 < d.indexOf("Presto"),
                    webKit: -1 < d.indexOf("AppleWebKit"),
                    gecko: -1 < d.indexOf("Gecko") && -1 == d.indexOf("KHTML"),
                    mobile: !! d.match(/AppleWebKit.*Mobile.*/),
                    ios: !! d.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
                    android: -1 < d.indexOf("Android"),
                    iPhone: -1 < d.indexOf("iPhone"),
                    iPad: -1 < d.indexOf("iPad"),
                    webApp: -1 == d.indexOf("Safari")
                }
            }(),
            supportH5: function() {
                var d = !1;
                navigator.geolocation && (d = !0);
                return d
            }(),
            supportFlash: function() {
                if (0 < navigator.mimeTypes.length) {
                    var d = navigator.mimeTypes["application/x-shockwave-flash"];
                    return null != d ? null != d.enabledPlugin : !1
                }
                if (self.ActiveXObject) try {
                    return new ActiveXObject("ShockwaveFlash.ShockwaveFlash"), !0
                } catch (a) {
                    return !1
                }
            }(),
            language: (navigator.browserLanguage || navigator.language).toLowerCase()
        },
        location: {
            hostname: function(d) {
                if (d) {
                    var a = document.createElement("a");
                    a.href = d;
                    return a.hostname
                }
                return window.location.hostname
            },
            port: function(d) {
                if (d) {
                    var a = document.createElement("a");
                    a.href = d;
                    return a.port
                }
                return window.location.port
            },
            porthost: function(d) {
                var a;
                d ? (a = document.createElement("a"), a.href = d, d = a.hostname, a = a.port) : (d = window.location.hostname, a = window.location.port);
                var e = d;
                a && 0 != a && (e = d + ":" + a);
                return e
            }
        },
        loader: {
            loadCssFile: function(d, a) {
                var e = document.createElement("link");
                e.rel = "stylesheet";
                e.href = d;
                if (a) e.onerror = function() {
                    a()
                };
                document.getElementsByTagName("head")[0].appendChild(e)
            },
            loadJsFile: function(d, a, e, g, f) {
                var b = document.getElementsByTagName("head")[0],
                    h = null;
                if (!d && !f || "override" == d) {
                    h = document.createElement("script");
                    h.type = "text/javascript";
                    h.charset = "utf-8";
                    h.src = a;
                    if (e) h.onload = h.onreadystatechange = function() {
                        if (h.ready) return !1;
                        if (!h.readyState || "loaded" == h.readyState || "complete" == h.readyState) h.ready = !0, e()
                    };
                    if (g) h.onerror = function() {
                        g()
                    };
                    b.appendChild(h)
                } else e && e()
            }
        }
    }
})();
(function() {
    SewisePlayer.GlobalParams = function(d) {
        var a = "",
            e = "",
            g = "",
            f, b, h, i, m = "",
            j = SewisePlayer.GlobalConst.VIDEO,
            c = SewisePlayer.Utils.getParameters(d);
        this.init = function(d) {
            c = d;
            c.server && (a = c.server);
            c.type && (e = c.type);
            c.swfpath && (g = c.swfpath);
            f = SewisePlayer.Utils.browser.versions.mobile;
            b = SewisePlayer.Utils.browser.supportH5;
            h = SewisePlayer.Utils.browser.supportFlash;
            i = SewisePlayer.Utils.location.porthost(SewisePlayer.localPath);
            if ("" == e) a == SewisePlayer.GlobalConst.VOD ? e = f && !h ? SewisePlayer.GlobalConst.M3U8 : SewisePlayer.GlobalConst.FLV : a == SewisePlayer.GlobalConst.LIVE && (e = f && !h ? SewisePlayer.GlobalConst.M3U8 : SewisePlayer.GlobalConst.RTMP), c.type = e
        };
        this.getParameObj = function() {
            return c
        };
        this.getPlayerId = function() {
            return c.playerid ? c.playerid : "sewise_player"
        };
        this.getServerType = function() {
            return a
        };
        this.getSwfPath = function() {
            return g
        };
        this.getMediaType = function() {
            return j
        };
        this.getPlayerType = function() {
            if (a == SewisePlayer.GlobalConst.VOD) switch (e) {
                case SewisePlayer.GlobalConst.FLV:
                    m = h ? SewisePlayer.GlobalConst.FLASH : SewisePlayer.GlobalConst.HTML5;
                    break;
                case SewisePlayer.GlobalConst.MP4:
                    m = b ? SewisePlayer.GlobalConst.HTML5 : SewisePlayer.GlobalConst.FLASH;
                    break;
                case SewisePlayer.GlobalConst.M3U8:
                    m = b && f ? SewisePlayer.GlobalConst.HTML5 : SewisePlayer.GlobalConst.FLASH;
                    break;
                case SewisePlayer.GlobalConst.MP3:
                    m = h ? SewisePlayer.GlobalConst.FLASH : SewisePlayer.GlobalConst.HTML5, j = SewisePlayer.GlobalConst.AUDIO
            } else if (a == SewisePlayer.GlobalConst.LIVE) switch (e) {
                case SewisePlayer.GlobalConst.RTMP:
                    m = SewisePlayer.GlobalConst.FLASH;
                    break;
                case SewisePlayer.GlobalConst.HTTP:
                    m = SewisePlayer.GlobalConst.FLASH;
                    break;
                case SewisePlayer.GlobalConst.M3U8:
                    m = b && f ? SewisePlayer.GlobalConst.HTML5 : SewisePlayer.GlobalConst.FLASH;
                    break;
                case SewisePlayer.GlobalConst.MP4:
                    m = b ? SewisePlayer.GlobalConst.HTML5 : SewisePlayer.GlobalConst.FLASH;
                    break;
                case SewisePlayer.GlobalConst.MP3:
                    m = h ? SewisePlayer.GlobalConst.FLASH : SewisePlayer.GlobalConst.HTML5, j = SewisePlayer.GlobalConst.AUDIO
            }
            return m
        };
        this.getPlayVars = function() {
            var b;
            if (m == SewisePlayer.GlobalConst.HTML5)
                if (a == SewisePlayer.GlobalConst.VOD) {
                    b = c.autostart ? c.autostart : "true";
                    var d = c.sourceid ? c.sourceid : "",
                        e = c.lang ? c.lang : "en_US",
                        h = c.logo ? c.logo : "",
                        f = c.buffer ? c.buffer : 2,
                        j = c.type,
                        k = c.skin,
                        q = "" != i && "localhost" != i ? "http://" + i + "/service/playerapi/" : "http://192.168.1.24/service/playerapi/";
                    if (k) {
                        var l = {};
                        l.jqueryPath = SewisePlayer.localPath + "js/jquery.min.js";
                        l.skinCssPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.css";
                        l.skinHtmlPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.html";
                        l.skinHtmlJsPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.html.js";
                        l.skinJsPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.js";
                        k = l
                    } else k = "";
                    var p;
                    p = "string" == typeof c.fallbackurls ? c.fallbackurls ? JSON.parse(decodeURIComponent(c.fallbackurls)) : "" : c.fallbackurls ? c.fallbackurls : "";
                    var l = "string" == typeof c.flagdatas ? c.flagdatas ? JSON.parse(decodeURIComponent(c.flagdatas)) : "" : c.flagdatas ? c.flagdatas : "",
                        r = c.title ? decodeURIComponent(c.title) : "",
                        s = c.draggable ? c.draggable : "true",
                        t = c.published ? c.published : 0,
                        u = c.videourl ? c.videourl : "",
                        v = c.starttime ? c.starttime : 0,
                        w = c.poster ? c.poster : "",
                        x = c.playername ? decodeURIComponent(c.playername) : "Sewise Player",
                        y = c.copyright ? decodeURIComponent(c.copyright) : "(C) All right reserved the SEWISE inc 2011-2013",
                        z = c.claritybutton ? c.claritybutton : "enable",
                        A = c.timedisplay ? c.timedisplay : "enable",
                        B = c.controlbardisplay ? c.controlbardisplay : "enable",
                        C = c.topBardisplay ? c.topBardisplay : "enable",
                        D = c.customstrings ? c.customstrings : "";
                    b = {
                        autoStart: b,
                        programId: d,
                        lang: e,
                        logo: h,
                        buffer: f,
                        type: j,
                        skin: k,
                        serverPath: q,
                        title: r,
                        draggable: s,
                        published: t,
                        videoUrl: u,
                        startTime: v,
                        poster: w,
                        fallbackUrls: p,
                        flagDatas: l,
                        playerName: x,
                        copyright: y,
                        clarityButton: z,
                        timeDisplay: A,
                        controlBarDisplay: B,
                        topBarDisplay: C,
                        customStrings: D
                    }
                } else {
                    if (a == SewisePlayer.GlobalConst.LIVE) {
                        b = c.autostart ? c.autostart : "true";
                        d = c.pid ? c.pid : "";
                        u = c.shifttime ? c.shifttime : "";
                        f = c.buffer ? c.buffer : 0;
                        h = c.logo ? c.logo : "";
                        e = c.lang ? c.lang : "en_US";
                        j = c.type;
                        k = c.skin;
                        q = "" != i && "localhost" != i ? "http://" + i + "/service/playerapi/" : "http://192.168.1.219/service/playerapi/";
                        k ? (l = {}, l.jqueryPath = SewisePlayer.localPath + "js/jquery.min.js", l.skinCssPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.css", l.skinHtmlPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.html", l.skinHtmlJsPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.html.js", l.skinJsPath = SewisePlayer.localPath + "html/skins/" + k + "/skin.js", k = l) : k = "";
                        p = "string" == typeof c.fallbackurls ? c.fallbackurls ? JSON.parse(decodeURIComponent(c.fallbackurls)) : "" : c.fallbackurls ? c.fallbackurls : "";
                        var l = "string" == typeof c.flagdatas ? c.flagdatas ? JSON.parse(decodeURIComponent(c.flagdatas)) : "" : c.flagdatas ? c.flagdatas : "",
                            r = c.title ? decodeURIComponent(c.title) : "",
                            s = c.draggable ? c.draggable : "true",
                            t = c.published ? c.published : 0,
                            v = c.streamurl ? c.streamurl : "",
                            E = c.duration ? c.duration : 3600,
                            w = c.poster ? c.poster : "",
                            x = c.playername ? decodeURIComponent(c.playername) : "Sewise Player",
                            y = c.copyright ? decodeURIComponent(c.copyright) : "(C) All right reserved the SEWISE inc 2011-2013",
                            z = c.claritybutton ? c.claritybutton : "enable",
                            A = c.timedisplay ? c.timedisplay : "enable",
                            B = c.controlbardisplay ? c.controlbardisplay : "enable",
                            C = c.topBardisplay ? c.topBardisplay : "enable",
                            D = c.customstrings ? c.customstrings : "";
                        b = {
                            autoStart: b,
                            programId: d,
                            shiftTime: u,
                            buffer: f,
                            logo: h,
                            lang: e,
                            type: j,
                            skin: k,
                            serverPath: q,
                            title: r,
                            draggable: s,
                            published: t,
                            streamUrl: v,
                            duration: E,
                            poster: w,
                            fallbackUrls: p,
                            flagDatas: l,
                            playerName: x,
                            copyright: y,
                            clarityButton: z,
                            timeDisplay: A,
                            controlBarDisplay: B,
                            topBarDisplay: C,
                            customStrings: D
                        }
                    }
                } else if (m == SewisePlayer.GlobalConst.FLASH)
                if (a == SewisePlayer.GlobalConst.VOD) b = c.autostart ? c.autostart : "true", d = c.sourceid ? c.sourceid : "", e = c.lang ? c.lang : "en_US", h = c.logo ? c.logo : "", f = c.buffer ? c.buffer : 2, j = c.type, k = c.skin, q = "" != i && "localhost" != i ? "http://" + i + "/flashservice/gateway.php" : "http://192.168.1.24/flashservice/gateway.php", p = "ServerApi.execute", k = k ? "" == g ? SewisePlayer.localPath + "flash/skins/" + k + ".swf" : g + "flash/skins/" + k + ".swf" : "", l = "string" == typeof c.flagdatas ? c.flagdatas ? c.flagdatas : "" : c.flagdatas ? encodeURIComponent(JSON.stringify(c.flagdatas, "", "\t")) : "", r = c.title ? encodeURIComponent(c.title) : "", s = c.draggable ? c.draggable : "true", t = c.published ? c.published : 0, u = c.videourl ? encodeURIComponent(c.videourl) : "", v = c.starttime ? c.starttime : 0, w = c.poster ? c.poster : "", x = c.playername ? encodeURIComponent(c.playername) : "Sewise Player", y = c.copyright ? encodeURIComponent(c.copyright) : "(C) All right reserved the SEWISE inc 2011-2013", z = c.claritybutton ? c.claritybutton : "enable", A = c.timedisplay ? c.timedisplay : "enable", B = c.controlbardisplay ? c.controlbardisplay : "enable", C = c.topBardisplay ? c.topBardisplay : "enable", D = c.customstrings ? c.customstrings : "", b = {
                    autoStart: b,
                    programId: d,
                    lang: e,
                    logo: h,
                    buffer: f,
                    type: j,
                    serverPath: q,
                    serverApi: p,
                    skin: k,
                    title: r,
                    draggable: s,
                    published: t,
                    videoUrl: u,
                    startTime: v,
                    poster: w,
                    flagDatas: l,
                    playerName: x,
                    copyright: y,
                    clarityButton: z,
                    timeDisplay: A,
                    controlBarDisplay: B,
                    topBarDisplay: C,
                    customStrings: D
                };
                else if (a == SewisePlayer.GlobalConst.LIVE) b = c.autostart ? c.autostart : "true", d = c.pid ? c.pid : "", u = c.shifttime ? c.shifttime : "", f = c.buffer ? c.buffer : 0, h = c.logo ? c.logo : "", e = c.lang ? c.lang : "en_US", j = c.type, k = c.skin, q = "" != i && "localhost" != i ? "http://" + i + "/flashservice/gateway.php" : "http://192.168.1.219/flashservice/gateway.php", p = "ServerApi.execute", k = k ? "" == g ? SewisePlayer.localPath + "flash/skins/" + k + ".swf" : g + "flash/skins/" + k + ".swf" : "", l = "string" == typeof c.flagdatas ? c.flagdatas ? c.flagdatas : "" : c.flagdatas ? encodeURIComponent(JSON.stringify(c.flagdatas, "", "\t")) : "", r = c.title ? encodeURIComponent(c.title) : "", s = c.draggable ? c.draggable : "true", t = c.published ? c.published : 0, v = c.streamurl ? encodeURIComponent(c.streamurl) : "", E = c.duration ? c.duration : 3600, w = c.poster ? c.poster : "", x = c.playername ? encodeURIComponent(c.playername) : "Sewise Player", y = c.copyright ? encodeURIComponent(c.copyright) : "(C) All right reserved the SEWISE inc 2011-2013", z = c.claritybutton ? c.claritybutton : "enable", A = c.timedisplay ? c.timedisplay : "enable", B = c.controlbardisplay ? c.controlbardisplay : "enable", C = c.topBardisplay ? c.topBardisplay : "enable", D = c.customstrings ? c.customstrings : "", b = {
                autoStart: b,
                programId: d,
                shiftTime: u,
                buffer: f,
                logo: h,
                lang: e,
                type: j,
                serverPath: q,
                serverApi: p,
                skin: k,
                title: r,
                draggable: s,
                published: t,
                streamUrl: v,
                duration: E,
                poster: w,
                flagDatas: l,
                playerName: x,
                copyright: y,
                clarityButton: z,
                timeDisplay: A,
                controlBarDisplay: B,
                topBarDisplay: C,
                customStrings: D
            };
            return b
        }
    }
})();
(function() {
    SewisePlayer.H5Params = function() {
        var d = this;
        this.autoStart = !0;
        this.programId = "";
        this.lang = "en_US";
        this.logo = "http://onvod.sewise.com/libs/swfplayer/skin/images/logo.png";
        this.buffer = 0;
        this.title = this.serverPath = this.shiftTime = this.type = "";
        this.draggable = !0;
        this.published = 0;
        this.streamUrl = this.videoUrl = "";
        this.startTime = 0;
        this.duration = 3600;
        this.playerName = "Sewise Player";
        this.copyright = "(C) All right reserved the SEWISE inc 2011-2014";
        this.flagDatas = this.fallbackUrls = this.poster = this.skin = "";
        this.parseParams = function(a) {
            if ("true" != a.autoStart) d.autoStart = !1;
            var e = a.programId;
            if (e) d.programId = e;
            if (e = a.lang) d.lang = e;
            if (e = a.logo) d.logo = e;
            if (e = a.buffer) d.buffer = e;
            if (e = a.type) d.type = e;
            if (e = a.shiftTime) d.type = e;
            if (e = a.serverPath) d.serverPath = e;
            if (e = a.title) d.title = e;
            if (e = a.draggable) d.draggable = e;
            if (e = a.published) d.published = e;
            if (e = a.videoUrl) d.videoUrl = e;
            if (e = a.streamUrl) d.streamUrl = e;
            if (e = a.startTime) d.startTime = e;
            if (e = a.duration) d.duration = e;
            if (e = a.playerName) d.playerName = e;
            if (e = a.copyright) d.copyright = e;
            if (e = a.skin) d.skin = e;
            if (e = a.poster) d.poster = e;
            if (e = a.fallbackUrls) d.fallbackUrls = e;
            if (a = a.flagDatas) d.flagDatas = a;
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PARAMS_READY
            })
        }
    }
})();
(function() {
    SewisePlayer.PlayerSkinLoader = function(d, a) {
        function e() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAYER_SKIN_LOADED_ERROR
            })
        }

        function g() {
            var a = document.getElementsByTagName("body")[0],
                e = document.createElement("iframe");
            e.src = m;
            e.onload = e.onreadystatechange = function() {
                try {
                    var h = e.contentWindow.document.getElementsByClassName("sewise-player-ui")[0];
                    d.appendChild(h);
                    a.removeChild(e);
                    SewisePlayer.Utils.loader.loadJsFile("override", j)
                } catch (i) {
                    a.removeChild(e),
                    SewisePlayer.Utils.loader.loadJsFile("override", c, f, b)
                }
            };
            a.appendChild(e)
        }

        function f() {
            d.appendChild(h(window.SewisePlayerSkin.localSkin)[0]);
            SewisePlayer.Utils.loader.loadJsFile("override", j)
        }

        function b() {
            e()
        }

        function h(c) {
            var a = document.createElement("div");
            if ("string" == typeof c) a.innerHTML = c;
            return a.childNodes
        }
        var i = a.jqueryPath,
            m = a.skinHtmlPath,
            j = a.skinJsPath,
            c = a.skinHtmlJsPath;
        SewisePlayer.Utils.loader.loadCssFile(a.skinCssPath, e);
        SewisePlayer.Utils.loader.loadJsFile(window.jQuery, i, function() {
            g()
        }, e, window.Zepto)
    }
})();
(function() {
    SewisePlayer.VodVideo = function(d) {
        function a() {
            b.removeEventListener("canplay", a, !1);
            g = !0;
            if (e) b.currentTime = e
        }
        var e = 0,
            g = !1,
            f = {
                mp4: "video/mp4",
                ogg: "video/ogg",
                webm: "video/webm",
                m3u8: "application/x-mpegURL"
            }, b;
        SewisePlayer.video && !SewisePlayer.Utils.browser.versions.ios ? (b = SewisePlayer.video, b.pause()) : (b = document.createElement("video"), SewisePlayer.video = b);
        b.style.width = "100%";
        b.style.height = "100%";
        b.style.backgroundColor = "#000000";
        b.autoplay = !1;
        b.controls = !0;
        b.loop = !1;
        b.preload = "none";
        d.appendChild(b);
        b.addEventListener("play", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAY_START
            })
        }, !1);
        b.addEventListener("pause", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAY_PAUSE
            })
        }, !1);
        b.addEventListener("durationchange", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.DURATION_CHANGE
            })
        }, !1);
        b.addEventListener("timeupdate", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.TIME_UPDATE
            })
        }, !1);
        b.addEventListener("progress", function() {
            var a;
            b.buffered && b.duration && (a = b.buffered.end(0) / b.duration);
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.LOAD_PROGRESS,
                progress: a
            })
        }, !1);
        b.addEventListener("canplay", a, !1);
        this.updatePlayer = function(a, d, g, j, c, n) {
            e = g;
            if (j) b.poster = j;
            if (n) {
                if (b.canPlayType)
                    if ("" != b.canPlayType(f[c])) b.src = a;
                    else
                        for (var o in n)
                            if ("" != b.canPlayType(f[o])) {
                                b.src = n[o];
                                break
                            }
            } else b.src = a
        };
        this.play = function() {
            b.autoplay = !0;
            b.play()
        };
        this.pause = function() {
            b.pause()
        };
        this.seek = function(a) {
            g ? b.currentTime = a : (b.autoplay = !0, b.play())
        };
        this.stop = function() {
            if (b.currentTime) b.currentTime = 0;
            b.pause()
        };
        this.duration = function() {
            return b.duration
        };
        this.currentTime = function() {
            return b.currentTime
        };
        this.muted = function(a) {
            b.muted = a
        };
        this.controls = function(a) {
            b.controls = a
        };
        this.volume = function(a) {
            b.volume = a
        }
    }
})();
(function() {
    SewisePlayer.VodAudio = function(d) {
        function a() {
            b.removeEventListener("canplay", a, !1);
            g = !0;
            if (e) b.currentTime = e
        }
        var e = 0,
            g = !1,
            f = {
                mp3: "audio/mpeg",
                ogg: "audio/ogg",
                webm: "audio/webm",
                m3u8: "application/x-mpegURL"
            }, b;
        SewisePlayer.audio && !SewisePlayer.Utils.browser.versions.ios ? (b = SewisePlayer.audio, b.pause()) : (b = document.createElement("audio"), SewisePlayer.audio = b);
        b.style.width = "100%";
        b.style.height = "100%";
        b.style.backgroundColor = "#000000";
        b.autoplay = !1;
        b.controls = !0;
        b.loop = !1;
        b.preload = "none";
        d.appendChild(b);
        b.addEventListener("play", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAY_START
            })
        }, !1);
        b.addEventListener("pause", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAY_PAUSE
            })
        }, !1);
        b.addEventListener("durationchange", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.DURATION_CHANGE
            })
        }, !1);
        b.addEventListener("timeupdate", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.TIME_UPDATE
            })
        }, !1);
        b.addEventListener("progress", function() {
            var a;
            b.buffered && b.duration && (a = b.buffered.end(0) / b.duration);
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.LOAD_PROGRESS,
                progress: a
            })
        }, !1);
        b.addEventListener("canplay", a, !1);
        this.updatePlayer = function(a, d, g, j, c, n) {
            e = g;
            if (n) {
                if (b.canPlayType)
                    if ("" != b.canPlayType(f[c])) b.src = a;
                    else
                        for (var o in n)
                            if ("" != b.canPlayType(f[o])) {
                                b.src = n[o];
                                break
                            }
            } else b.src = a
        };
        this.play = function() {
            b.autoplay = !0;
            b.play()
        };
        this.pause = function() {
            b.pause()
        };
        this.seek = function(a) {
            g ? b.currentTime = a : (b.autoplay = !0, b.play())
        };
        this.stop = function() {
            if (b.currentTime) b.currentTime = 0;
            b.pause()
        };
        this.duration = function() {
            return b.duration
        };
        this.currentTime = function() {
            return b.currentTime
        };
        this.muted = function(a) {
            b.muted = a
        };
        this.controls = function(a) {
            b.controls = a
        };
        this.volume = function(a) {
            b.volume = a
        }
    }
})();
(function() {
    SewisePlayer.VodMediaConsole = function(d, a, e) {
        var g = this,
            f = !1,
            b = SewisePlayerSkin.IVodSkin,
            h;
        h = e == SewisePlayer.GlobalConst.AUDIO ? new SewisePlayer.VodAudio(d) : new SewisePlayer.VodVideo(d);
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.STREAMS_DATA_READY, function() {
            b.programTitle(a.title);
            h.updatePlayer(a.videoUrl, a.buffer, a.startTime, a.poster, a.type, a.fallbackUrls);
            a.autoStart && (a.startTime ? h.seek(a.startTime) : h.play());
            g.playerReady()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.STREAMS_DATA_FAILED, function() {});
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAYER_SKIN_LOADED, function(d) {
            b = d.playerSkin;
            b.player(SewisePlayer.IVodPlayer);
            b.logo(a.logo);
            h.controls(!1)
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAY_START, function() {
            b.started();
            g.onStart()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAY_PAUSE, function() {
            b.paused();
            g.onPause()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.DURATION_CHANGE, function() {
            b.duration(h.duration())
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.TIME_UPDATE, function() {
            var a = h.currentTime();
            b.timeUpdate(a);
            g.onPlayTime(a)
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.LOAD_PROGRESS, function(a) {
            b.loadedProgress(a.progress)
        });
        SewisePlayer.IVodPlayer.play = function() {
            h.play()
        };
        SewisePlayer.IVodPlayer.pause = function() {
            h.pause()
        };
        SewisePlayer.IVodPlayer.seek = function(a) {
            h.seek(a);
            g.onSeek(a)
        };
        SewisePlayer.IVodPlayer.stop = function() {
            h.stop();
            g.onStop()
        };
        SewisePlayer.IVodPlayer.changeClarity = function() {};
        SewisePlayer.IVodPlayer.setVolume = function(a) {
            h.volume(a)
        };
        SewisePlayer.IVodPlayer.muted = function(a) {
            h.muted(a)
        };
        SewisePlayer.IVodPlayer.toPlay = function(b, d, e, c) {
            a.videoUrl = b;
            a.startTime = e;
            a.autoStart = c;
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.STREAMS_DATA_READY
            })
        };
        SewisePlayer.IVodPlayer.duration = function() {
            return h.duration()
        };
        SewisePlayer.IVodPlayer.playTime = function() {
            return h.currentTime()
        };
        SewisePlayer.IVodPlayer.type = function() {};
        SewisePlayer.IVodPlayer.showTextTip = function() {};
        SewisePlayer.IVodPlayer.hideTextTip = function() {};
        this.doPlay = function() {
            SewisePlayer.IVodPlayer.play()
        };
        this.doPause = function() {
            SewisePlayer.IVodPlayer.pause()
        };
        this.doSeek = function(a) {
            SewisePlayer.IVodPlayer.seek(a)
        };
        this.doStop = function() {
            SewisePlayer.IVodPlayer.stop()
        };
        this.setVolume = function(a) {
            SewisePlayer.IVodPlayer.setVolume(a)
        };
        this.duration = function() {
            return SewisePlayer.IVodPlayer.duration()
        };
        this.playTime = function() {
            return SewisePlayer.IVodPlayer.playTime()
        };
        this.toPlay = function(a, b, d, c) {
            SewisePlayer.IVodPlayer.toPlay(a, b, d, c)
        };
        this.playerReady = function() {
            f || (f = !0, window.playerReady && "function" == typeof window.playerReady && window.playerReady())
        };
        this.onStart = function(a) {
            if (window.onStart && "function" == typeof window.onStart) window.onStart(a)
        };
        this.onStop = function(a) {
            if (window.onStop && "function" == typeof window.onStop) window.onStop(a)
        };
        this.onMetadata = function(a, b) {
            if (window.onMetadata && "function" == typeof window.onMetadata) window.onMetadata(a, b)
        };
        this.onClarity = function(a, b) {
            if (window.onClarity && "function" == typeof window.onClarity) window.onClarity(a, b)
        };
        this.onPause = function(a) {
            if (window.onPause && "function" == typeof window.onPause) window.onPause(a)
        };
        this.onSeek = function(a, b) {
            if (window.onSeek && "function" == typeof window.onSeek) window.onSeek(a, b)
        };
        this.onPlayTime = function(a, b) {
            if (window.onPlayTime && "function" == typeof window.onPlayTime) window.onPlayTime(a, b)
        }
    }
})();
(function() {
    SewisePlayer.VodMediaStreams = function(d, a) {
        function e() {
            f.getStreams()
        }

        function g() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.STREAMS_DATA_READY
            })
        }
        var f = this;
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PARAMS_READY, function() {
            a.skin ? SewisePlayer.PlayerSkinLoader(d, a.skin) : f.getStreams()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAYER_SKIN_LOADED, e);
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAYER_SKIN_LOADED_ERROR, e);
        this.getStreams = function() {
            a.programId ? SewisePlayer.Utils.jsonp({
                url: a.serverPath,
                jsonp: "callback",
                data: {
                    "do": "getvideos",
                    programid: a.programId,
                    m3u8: 1,
                    isAjax: 1,
                    published: a.published,
                    flagdatas: JSON.stringify(a.flagDatas, "", "\t")
                },
                success: function(b) {
                    a.title = b.programname;
                    a.videoUrl = b.m3u8url;
                    a.poster = b.poster;
                    a.type = SewisePlayer.GlobalConst.M3U8;
                    a.fallbackUrls = b.fallbackurls;
                    g()
                }
            }) : a.videoUrl ? g() : SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.STREAMS_DATA_FAILED
            })
        }
    }
})();
(function() {
    SewisePlayer.LiveVideo = function(d) {
        function a() {
            b.removeEventListener("canplay", a, !1);
            g = !0;
            if (e) b.currentTime = e
        }
        var e = 0,
            g = !1,
            f = {
                mp4: "video/mp4",
                ogg: "video/ogg",
                webm: "video/webm",
                m3u8: "application/x-mpegURL"
            }, b;
        SewisePlayer.video && !SewisePlayer.Utils.browser.versions.ios ? (b = SewisePlayer.video, b.pause()) : (b = document.createElement("video"), SewisePlayer.video = b);
        b.style.width = "100%";
        b.style.height = "100%";
        b.style.backgroundColor = "#000000";
        b.autoplay = !1;
        b.controls = !0;
        b.loop = !1;
        b.preload = "none";
        d.appendChild(b);
        b.addEventListener("play", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAY_START
            })
        }, !1);
        b.addEventListener("pause", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.PLAY_PAUSE
            })
        }, !1);
        b.addEventListener("durationchange", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.DURATION_CHANGE
            })
        }, !1);
        b.addEventListener("timeupdate", function() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.TIME_UPDATE
            })
        }, !1);
        b.addEventListener("progress", function() {
            var a;
            b.buffered && b.duration && (a = b.buffered.end(0) / b.duration);
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.LOAD_PROGRESS,
                progress: a
            })
        }, !1);
        b.addEventListener("canplay", a, !1);
        this.updatePlayer = function(a, d, g, j, c, n) {
            e = g;
            if (j) b.poster = j;
            if (n) {
                if (b.canPlayType)
                    if ("" != b.canPlayType(f[c])) b.src = a;
                    else
                        for (var o in n)
                            if ("" != b.canPlayType(f[o])) {
                                b.src = n[o];
                                break
                            }
            } else b.src = a
        };
        this.play = function() {
            b.autoplay = !0;
            b.play()
        };
        this.pause = function() {
            b.pause()
        };
        this.seek = function(a) {
            g ? b.currentTime = a : (b.autoplay = !0, b.play())
        };
        this.stop = function() {
            b.pause()
        };
        this.duration = function() {};
        this.currentTime = function() {
            return b.currentTime
        };
        this.muted = function(a) {
            b.muted = a
        };
        this.controls = function(a) {
            b.controls = a
        };
        this.volume = function(a) {
            b.volume = a
        }
    }
})();
(function() {
    SewisePlayer.LiveMediaConsole = function(d, a) {
        var e = this,
            g = !1,
            f = SewisePlayerSkin.ILiveSkin,
            b = new SewisePlayer.LiveVideo(d);
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.STREAMS_DATA_READY, function() {
            f.programTitle(a.title);
            b.updatePlayer(a.streamUrl, a.buffer, a.shiftTime, a.poster, a.type, a.fallbackUrls);
            a.autoStart && (a.shiftTime ? b.seek(a.shiftTime) : b.play());
            e.playerReady()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.STREAMS_DATA_FAILED, function() {});
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAYER_SKIN_LOADED, function(d) {
            f = d.playerSkin;
            f.player(SewisePlayer.ILivePlayer);
            f.logo(a.logo);
            b.controls(!1)
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAY_START, function() {
            f.started();
            e.onStart()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAY_PAUSE, function() {
            f.paused();
            e.onPause()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.DURATION_CHANGE, function() {
            f.duration(0)
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.TIME_UPDATE, function() {
            var a = b.currentTime();
            f.timeUpdate(a);
            e.onPlayTime(a)
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.LOAD_PROGRESS, function(a) {
            f.loadedProgress(a.progress)
        });
        SewisePlayer.ILivePlayer.live = function() {
            b.play()
        };
        SewisePlayer.ILivePlayer.play = function() {
            b.play()
        };
        SewisePlayer.ILivePlayer.pause = function() {
            b.pause()
        };
        SewisePlayer.ILivePlayer.seek = function() {};
        SewisePlayer.ILivePlayer.stop = function() {
            b.stop();
            e.onStop()
        };
        SewisePlayer.ILivePlayer.changeClarity = function() {};
        SewisePlayer.ILivePlayer.setVolume = function(a) {
            b.volume(a)
        };
        SewisePlayer.ILivePlayer.muted = function(a) {
            b.muted(a)
        };
        SewisePlayer.ILivePlayer.toPlay = function(b, d, e, f) {
            a.streamUrl = b;
            a.shiftTime = e;
            a.autoStart = f;
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.STREAMS_DATA_READY
            })
        };
        SewisePlayer.ILivePlayer.duration = function() {
            return 0
        };
        SewisePlayer.ILivePlayer.liveTime = function() {
            return 0
        };
        SewisePlayer.ILivePlayer.playTime = function() {
            return b.currentTime()
        };
        SewisePlayer.ILivePlayer.type = function() {};
        SewisePlayer.ILivePlayer.showTextTip = function() {};
        SewisePlayer.ILivePlayer.hideTextTip = function() {};
        this.doLive = function() {
            SewisePlayer.ILivePlayer.live()
        };
        this.doPlay = function() {
            SewisePlayer.ILivePlayer.play()
        };
        this.doPause = function() {
            SewisePlayer.ILivePlayer.pause()
        };
        this.doSeek = function(a) {
            SewisePlayer.ILivePlayer.seek(a)
        };
        this.doStop = function() {
            SewisePlayer.ILivePlayer.stop()
        };
        this.setVolume = function(a) {
            SewisePlayer.ILivePlayer.setVolume(a)
        };
        this.liveTime = function() {
            return SewisePlayer.ILivePlayer.liveTime()
        };
        this.playTime = function() {
            return SewisePlayer.ILivePlayer.playTime()
        };
        this.toPlay = function(a, b, d, e) {
            SewisePlayer.ILivePlayer.toPlay(a, b, d, e)
        };
        this.playerReady = function() {
            g || (g = !0, window.playerReady && "function" == typeof window.playerReady && window.playerReady())
        };
        this.onStart = function(a) {
            if (window.onStart && "function" == typeof window.onStart) window.onStart(a)
        };
        this.onStop = function(a) {
            if (window.onStop && "function" == typeof window.onStop) window.onStop(a)
        };
        this.onMetadata = function(a, b) {
            if (window.onMetadata && "function" == typeof window.onMetadata) window.onMetadata(a, b)
        };
        this.onClarity = function(a, b) {
            if (window.onClarity && "function" == typeof window.onClarity) window.onClarity(a, b)
        };
        this.onPause = function(a) {
            if (window.onPause && "function" == typeof window.onPause) window.onPause(a)
        };
        this.onSeek = function(a, b) {
            if (window.onSeek && "function" == typeof window.onSeek) window.onSeek(a, b)
        };
        this.onPlayTime = function(a, b) {
            if (window.onPlayTime && "function" == typeof window.onPlayTime) window.onPlayTime(a, b)
        }
    }
})();
(function() {
    SewisePlayer.LiveMediaStreams = function(d, a) {
        function e() {
            f.getLiveStreams()
        }

        function g() {
            SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.STREAMS_DATA_READY
            })
        }
        var f = this;
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PARAMS_READY, function() {
            a.skin ? SewisePlayer.PlayerSkinLoader(d, a.skin) : f.getLiveStreams()
        });
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAYER_SKIN_LOADED, e);
        SewisePlayer.CommandDispatcher.addEventListener(SewisePlayer.Events.PLAYER_SKIN_LOADED_ERROR, e);
        this.getLiveStreams = function() {
            a.programId ? SewisePlayer.Utils.getScript({
                url: a.serverPath,
                data: {
                    "do": "getm3u8bypid",
                    programid: a.programId,
                    published: a.published,
                    flagdatas: JSON.stringify(a.flagDatas, "", "\t")
                },
                success: function() {
                    a.streamUrl = m3u8Url;
                    a.title = programname;
                    a.poster = poster;
                    a.type = SewisePlayer.GlobalConst.M3U8;
                    a.fallbackUrls = data.fallbackurls;
                    g()
                }
            }) : a.streamUrl ? g() : SewisePlayer.CommandDispatcher.dispatchEvent({
                type: SewisePlayer.Events.STREAMS_DATA_FAILED
            })
        };
        this.getShiftStreams = function() {
            SewisePlayer.Utils.getScript({
                url: a.serverPath,
                data: {
                    "do": "epg",
                    op: "getm3u8",
                    programid: a.programId,
                    time: a.shiftTime,
                    playShift: "true"
                },
                success: function() {
                    a.streamUrl = epgM3u8.url;
                    g()
                }
            })
        }
    }
})();
(function() {
    SewisePlayer.PlayerCommon = function(d, a, e, g) {
        var f;
        d == SewisePlayer.GlobalConst.VOD ? (f = new SewisePlayer.VodMediaConsole(a, e, g), new SewisePlayer.VodMediaStreams(a, e)) : d == SewisePlayer.GlobalConst.LIVE && (f = new SewisePlayer.LiveMediaConsole(a, e, g), new SewisePlayer.LiveMediaStreams(a, e));
        return f
    }
})();
(function() {
    SewisePlayer.FlashExternalInterface = function(d, a) {
        if (d == SewisePlayer.GlobalConst.VOD) SewisePlayer.doPlay = function() {
            a.doPlay()
        }, SewisePlayer.doPause = function() {
            a.doPause()
        }, SewisePlayer.doSeek = function(d) {
            a.doSeek(d)
        }, SewisePlayer.doStop = function() {
            a.doStop()
        }, SewisePlayer.setVolume = function(d) {
            a.setVolume(d)
        }, SewisePlayer.duration = function() {
            return a.duration()
        }, SewisePlayer.playTime = function() {
            return a.playTime()
        }, SewisePlayer.playProgram = function(d, g, f) {
            a.playProgram(d, g, f)
        }, SewisePlayer.toPlay = function(d, g, f, b) {
            a.toPlay(d, g, f, b)
        };
        else if (d == SewisePlayer.GlobalConst.LIVE) SewisePlayer.doPlay = function() {
            a.doPlay()
        }, SewisePlayer.doPause = function() {
            a.doPause()
        }, SewisePlayer.doSeek = function(d) {
            a.doSeek(d)
        }, SewisePlayer.doStop = function() {
            a.doStop()
        }, SewisePlayer.doLive = function() {
            a.doLive()
        }, SewisePlayer.setVolume = function(d) {
            a.setVolume(d)
        }, SewisePlayer.liveTime = function() {
            return a.liveTime()
        }, SewisePlayer.playTime = function() {
            return a.playTime()
        }, SewisePlayer.playChannel = function(d, g, f) {
            a.playChannel(d, g, f)
        }, SewisePlayer.toPlay = function(d, g, f, b) {
            a.toPlay(d, g, f, b)
        }
    }
})();
(function() {
    SewisePlayer.Html5ExternalInterface = function(d, a) {
        if (d == SewisePlayer.GlobalConst.VOD) SewisePlayer.doPlay = function() {
            a.doPlay()
        }, SewisePlayer.doPause = function() {
            a.doPause()
        }, SewisePlayer.doSeek = function(d) {
            a.doSeek(d)
        }, SewisePlayer.doStop = function() {
            a.doStop()
        }, SewisePlayer.setVolume = function(d) {
            a.setVolume(d)
        }, SewisePlayer.duration = function() {
            return a.duration()
        }, SewisePlayer.playTime = function() {
            return a.playTime()
        }, SewisePlayer.toPlay = function(d, g, f, b) {
            a.toPlay(d, g, f, b)
        };
        else if (d == SewisePlayer.GlobalConst.LIVE) SewisePlayer.doPlay = function() {
            a.doPlay()
        }, SewisePlayer.doPause = function() {
            a.doPause()
        }, SewisePlayer.setVolume = function(d) {
            a.setVolume(d)
        }, SewisePlayer.doSeek = function(d) {
            a.doSeek(d)
        }, SewisePlayer.doStop = function() {
            a.doStop()
        }, SewisePlayer.liveTime = function() {
            return a.liveTime()
        }, SewisePlayer.playTime = function() {
            return a.playTime()
        }, SewisePlayer.toPlay = function(d, g, f, b) {
            a.toPlay(d, g, f, b)
        }
    }
})();
(function() {
    function d() {
        function d() {
            e(o, m)
        }

        function e(b, d) {
            var f = document.createElement("div");
            f.id = "swf-container";
            b.appendChild(f);
            var f = {
                id: j,
                name: j
            }, g = a.getSwfPath();
            swfobject.embedSWF("" == g ? c == SewisePlayer.GlobalConst.AUDIO ? SewisePlayer.localPath + "flash/plugins/AudioPlayer.swf" : SewisePlayer.localPath + "flash/SewisePlayer.swf" : c == SewisePlayer.GlobalConst.AUDIO ? g + "flash/plugins/AudioPlayer.swf" : g + "flash/SewisePlayer.swf", "swf-container", "100%", "100%", "9.0.115", !1, d, {
                allowfullscreen: !0,
                wmode: "transparent",
                allowscriptaccess: "always"
            }, f, function() {
                var a = document.getElementById(j);
                SewisePlayer.FlashExternalInterface(h, a)
            })
        }

        function b(a, b) {
            var d = new SewisePlayer.H5Params(b),
                e = new SewisePlayer.PlayerCommon(h, a, d, c);
            SewisePlayer.Html5ExternalInterface(h, e);
            d.parseParams(b)
        }
        var h = a.getServerType(),
            i = a.getPlayerType(),
            m = a.getPlayVars(),
            j = a.getPlayerId(),
            c = a.getMediaType(),
            n = SewisePlayer.script.parentNode,
            o = document.createElement("div");
        o.style.width = "100%";
        o.style.height = "100%";
        o.style.position = "relative";
        n.appendChild(o);
        i == SewisePlayer.GlobalConst.HTML5 ? b(o, m) : SewisePlayer.Utils.loader.loadJsFile(window.swfobject, SewisePlayer.localPath + "js/swfobject.js", d)
    }
    var a = new SewisePlayer.GlobalParams(["SewisePlayer.js", "sewise.player.min.js"]),
        e = a.getParameObj();
    SewisePlayer.Utils.object.isEmpty(e) || (a.init(e), d());
    SewisePlayer.setup = function(g) {
        e = g;
        a.init(e);
        d()
    }
})(window);